{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    name: '',\n    weather: \"\",\n    icon: '',\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: '',\n    sunset: ''\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = {\n        name: data.name,\n        weather: data.weather[0].main,\n        icon: data.weather[0].icon,\n        temp: round(data.main.temp - 273.15),\n        feels_like: round(data.main.feels_like - 273.15),\n        pressure: data.main.pressure,\n        temp_min: round(data.main.temp_min - 273.15),\n        temp_max: round(data.main.temp_max - 273.15),\n        humidity: data.main.humidity,\n        visibility: data.visibility,\n        windSpeed: data.wind.speed,\n        sunrise: moment(data.sys.sunrise * 1e3).format('hh:mm a').toString(),\n        sunset: moment(data.sys.sunset * 1e3).format('hh:mm a').toString()\n      };\n      setDataResponse(state => ({ ...state,\n        name: obj.name,\n        weather: obj.weather,\n        icon: obj.icon,\n        temp: obj.temp,\n        feels_like: obj.feels_like,\n        temp_min: obj.temp_min,\n        temp_max: obj.temp_max,\n        pressure: obj.pressure,\n        humidity: obj.humidity,\n        visibility: obj.visibility,\n        windSpeed: obj.windSpeed,\n        sunrise: obj.sunrise,\n        sunset: obj.sunset\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataResponse.weather, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), \"Temp: \", dataResponse.temp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), \"Feels Like: \", dataResponse.feels_like, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \"Min: \", dataResponse.temp_min, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \"Max: \", dataResponse.temp_max, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \"Pressure: \", dataResponse.pressure, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), \"Humidity: \", dataResponse.humidity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), \"Visibility: \", dataResponse.visibility, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), \"Wind Speed: \", dataResponse.windSpeed, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), \"Sunrise: \", dataResponse.sunrise, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), \"Sunset: \", dataResponse.sunset]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"r727bfIhH8ehdtQEW+2fhG/HDZM=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","moment","Clima","region","dataResponse","setDataResponse","name","weather","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","windsSpeed","sunrise","sunset","round","num","Math","fetch","then","response","json","data","obj","main","windSpeed","wind","speed","sys","format","toString","state","catch","err","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from 'moment'\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({\n      name: '',\n    weather: \"\",\n    icon:'',\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: '',\n    sunset: ''\n  });\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = {\n            name: data.name,\n          weather: data.weather[0].main,\n          icon: data.weather[0].icon,\n          temp: round(data.main.temp - 273.15),\n          feels_like: round(data.main.feels_like - 273.15),\n          pressure: data.main.pressure,\n          temp_min: round(data.main.temp_min - 273.15),\n          temp_max: round(data.main.temp_max - 273.15),\n          humidity: data.main.humidity,\n          visibility: data.visibility,\n          windSpeed: data.wind.speed,\n          sunrise: moment (data.sys.sunrise * 1e3).format('hh:mm a').toString(),\n          sunset: moment (data.sys.sunset * 1e3).format('hh:mm a').toString()\n        };\n        setDataResponse((state) => ({\n          ...state,\n          name: obj.name,\n          weather: obj.weather,\n          icon: obj.icon,\n          temp: obj.temp,\n          feels_like: obj.feels_like,\n          temp_min: obj.temp_min,\n          temp_max: obj.temp_max,\n          pressure: obj.pressure,\n          humidity: obj.humidity,\n          visibility: obj.visibility,\n          windSpeed: obj.windSpeed,\n          sunrise: obj.sunrise,\n          sunset: obj.sunset\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n\n  return (\n    <div>\n      {dataResponse.weather}\n      <br />\n      <img src={`http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`}/>\n      Temp: {dataResponse.temp}\n      <br />\n      Feels Like: {dataResponse.feels_like}\n      <br />\n      Min: {dataResponse.temp_min}\n      <br />\n      Max: {dataResponse.temp_max}\n      <br />\n      Pressure: {dataResponse.pressure}\n      <br />\n      Humidity: {dataResponse.humidity}\n      <br />\n      Visibility: {dataResponse.visibility}\n      <br />\n      Wind Speed: {dataResponse.windSpeed}\n      <br />\n      Sunrise: {dataResponse.sunrise}\n      <br />\n      Sunset: {dataResponse.sunset}\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}