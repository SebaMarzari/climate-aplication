{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = {\n        weather: data.weather[0].main,\n        temp: round(data.main.temp - 273.15),\n        feels_like: round(data.main.feels_like - 273.15),\n        pressure: data.main.pressure,\n        temp_min: round(data.main.temp_min - 273.15),\n        temp_max: round(data.main.temp_max - 273.15),\n        humidity: data.main.humidity,\n        visibility: data.visibility,\n        windSpeed: data.wind.speed\n      };\n      setDataResponse(state => ({ ...state,\n        weather: obj.weather,\n        temp: obj.temp,\n        feels_like: obj.feels_like,\n        temp_min: obj.temp_min,\n        temp_max: obj.temp_max,\n        pressure: obj.pressure,\n        humidity: obj.humidity,\n        visibility: obj.visibility,\n        windSpeed: obj.windSpeed\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataResponse.weather, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \"Temp: \", dataResponse.temp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), \"Feels Like: \", dataResponse.feels_like, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \"Min: \", dataResponse.temp_min, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \"Max: \", dataResponse.temp_max, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \"Pressure: \", dataResponse.pressure, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), \"Humidity: \", dataResponse.humidity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \"Visibility: \", dataResponse.visibility, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), \"Wind Speed: \", dataResponse.windSpeed]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"S2DDU2c1q5SniyZFXT1e2sVMxUA=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","Clima","region","dataResponse","setDataResponse","weather","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","windsSpeed","round","num","Math","fetch","then","response","json","data","obj","main","windSpeed","wind","speed","state","catch","err","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n  });\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = {\n          weather: data.weather[0].main,\n          temp: round(data.main.temp - 273.15),\n          feels_like: round(data.main.feels_like - 273.15),\n          pressure: data.main.pressure,\n          temp_min: round(data.main.temp_min - 273.15),\n          temp_max: round(data.main.temp_max - 273.15),\n          humidity: data.main.humidity,\n          visibility: data.visibility,\n          windSpeed: data.wind.speed,\n        };\n        setDataResponse((state) => ({\n          ...state,\n          weather: obj.weather,\n          temp: obj.temp,\n          feels_like: obj.feels_like,\n          temp_min: obj.temp_min,\n          temp_max: obj.temp_max,\n          pressure: obj.pressure,\n          humidity: obj.humidity,\n          visibility: obj.visibility,\n          windSpeed: obj.windSpeed,\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n\n  return (\n    <div>\n      {dataResponse.weather}\n      <br />\n      Temp: {dataResponse.temp}\n      <br />\n      Feels Like: {dataResponse.feels_like}\n      <br />\n      Min: {dataResponse.temp_min}\n      <br />\n      Max: {dataResponse.temp_max}\n      <br />\n      Pressure: {dataResponse.pressure}\n      <br />\n      Humidity: {dataResponse.humidity}\n      <br />\n      Visibility: {dataResponse.visibility}\n      <br />\n      Wind Speed: {dataResponse.windSpeed}\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}