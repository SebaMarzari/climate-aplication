{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState([]);\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = [];\n      var currentDay = moment(new Date()).format('DD-MM-YYYY');\n\n      for (var i = 0; data.list.length; i++) {\n        obj.push({\n          day: moment(data.list[i].dt * 1e3).format('DD-MM-YYYY'),\n          weather: data.list[i].weather[0].main,\n          icon: data.list[i].weather[0].icon,\n          temp: round(data.list[i].main.temp - 273.15),\n          feels_like: round(data.list[i].main.feels_like - 273.15),\n          pressure: data.list[i].main.pressure,\n          temp_min: round(data.list[i].main.temp_min - 273.15),\n          temp_max: round(data.list[i].main.temp_max - 273.15),\n          humidity: data.list[i].main.humidity,\n          visibility: data.list[i].visibility,\n          windSpeed: data.list[i].wind.speed,\n          sunrise: moment(data.list[i].sys.sunrise * 1e3).format(\"hh:mm a\").toString(),\n          sunset: moment(data.list[i].sys.sunset * 1e3).format(\"hh:mm a\").toString()\n        });\n        setDataResponse({ ...dataResponse,\n          obj\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response daily\", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"KYq8BDEj4F+X3Rt5y+pDD09aJaY=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js"],"names":["useState","useEffect","moment","Div","Clima","region","dataResponse","setDataResponse","round","num","Math","fetch","then","response","json","data","obj","currentDay","Date","format","i","list","length","push","day","dt","weather","main","icon","temp","feels_like","pressure","temp_min","temp_max","humidity","visibility","windSpeed","wind","speed","sunrise","sys","toString","sunset","catch","err","console","log","display"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState([]);\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n          const obj=[]\n          var currentDay=moment(new Date()).format('DD-MM-YYYY')\n        for (var i = 0; data.list.length; i++) {\n          obj.push({\n              day: moment(data.list[i].dt * 1e3).format('DD-MM-YYYY'),\n            weather: data.list[i].weather[0].main,\n            icon: data.list[i].weather[0].icon,\n            temp: round(data.list[i].main.temp - 273.15),\n            feels_like: round(data.list[i].main.feels_like - 273.15),\n            pressure: data.list[i].main.pressure,\n            temp_min: round(data.list[i].main.temp_min - 273.15),\n            temp_max: round(data.list[i].main.temp_max - 273.15),\n            humidity: data.list[i].main.humidity,\n            visibility: data.list[i].visibility,\n            windSpeed: data.list[i].wind.speed,\n            sunrise: moment(data.list[i].sys.sunrise * 1e3)\n              .format(\"hh:mm a\")\n              .toString(),\n            sunset: moment(data.list[i].sys.sunset * 1e3)\n              .format(\"hh:mm a\")\n              .toString(),\n          });\n          setDataResponse({...dataResponse, obj});\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response daily\", dataResponse);\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n      </div>\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}