{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    temp_min: 0,\n    temp_max: 0\n  });\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = {\n        weather: data.weather[0].description,\n        temp_min: data.main.temp_min - 273.15,\n        temp_max: data.main.temp_max - 273.15\n      };\n      setDataResponse(state => ({ ...state,\n        weather: obj.weather,\n        temp_min: obj.temp_min,\n        temp_max: obj.temp_max\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataResponse.weather, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \"Min: \", dataResponse.temp_min, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \"Max: \", dataResponse.temp_max]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"BHuIxL4dsWnIYTnXPAM6kVjrCLE=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","Clima","region","dataResponse","setDataResponse","weather","temp_min","temp_max","fetch","then","response","json","data","obj","description","main","state","catch","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAAEM,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAC,CAAxB;AAA2BC,IAAAA,QAAQ,EAAC;AAApC,GAAD,CAAhD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CACF,kDAAiDN,MAAO,yCADtD,CAAL,CAGGO,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,YAAMC,GAAG,GAAG;AACVR,QAAAA,OAAO,EAAEO,IAAI,CAACP,OAAL,CAAa,CAAb,EAAgBS,WADf;AAEVR,QAAAA,QAAQ,EAAEM,IAAI,CAACG,IAAL,CAAUT,QAAV,GAAqB,MAFrB;AAGVC,QAAAA,QAAQ,EAAEK,IAAI,CAACG,IAAL,CAAUR,QAAV,GAAoB;AAHpB,OAAZ;AAKAH,MAAAA,eAAe,CAACY,KAAK,KAAK,EACtB,GAAGA,KADmB;AAEtBX,QAAAA,OAAO,EAAEQ,GAAG,CAACR,OAFS;AAGtBC,QAAAA,QAAQ,EAAEO,GAAG,CAACP,QAHQ;AAItBC,QAAAA,QAAQ,EAACM,GAAG,CAACN;AAJS,OAAL,CAAN,CAAf;AAMD,KAhBH,EAiBGU,KAjBH,CAiBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAnBH;AAoBD,GArBQ,EAqBN,CAAChB,MAAD,CArBM,CAAT;AAsBAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BjB,YAA9B;AAEA,sBACE;AAAA,eACGA,YAAY,CAACE,OADhB,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,WAGQF,YAAY,CAACG,QAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,WAKQH,YAAY,CAACI,QALrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCD;;GAAMN,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({ weather: \"\", temp_min:0, temp_max:0 });\n\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = {\n          weather: data.weather[0].description,\n          temp_min: data.main.temp_min - 273.15,\n          temp_max: data.main.temp_max -273.15\n        };\n        setDataResponse(state => ({\n            ...state,\n            weather: obj.weather,\n            temp_min: obj.temp_min,\n            temp_max:obj.temp_max\n        }))\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n\n  return (\n    <div>\n      {dataResponse.weather}\n      <br/>\n      Min: {dataResponse.temp_min}\n      <br/>\n      Max: {dataResponse.temp_max}\n\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}