{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    temp_min: 0,\n    temp_max: 0,\n    humidity: 0,\n    wind: 0\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = {\n        weather: data.weather[0].main,\n        temp_min: round(data.main.temp_min - 273.15),\n        temp_max: round(data.main.temp_max - 273.15),\n        humidity: data.main.humidity,\n        wind: data.main.wind[1]\n      };\n      setDataResponse(state => ({ ...state,\n        weather: obj.weather,\n        temp_min: obj.temp_min,\n        temp_max: obj.temp_max,\n        humidity: obj.humidity\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataResponse.weather, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \"Min: \", dataResponse.temp_min, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"Max: \", dataResponse.temp_max, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \"Humidity: \", dataResponse.humidity]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"JIVLGpNSSjgcWCjow4+TVe5V5Pc=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","Clima","region","dataResponse","setDataResponse","weather","temp_min","temp_max","humidity","wind","round","num","Math","fetch","then","response","json","data","obj","main","state","catch","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAAEM,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAC,CAAxB;AAA2BC,IAAAA,QAAQ,EAAC,CAApC;AAAuCC,IAAAA,QAAQ,EAAC,CAAhD;AAAmDC,IAAAA,IAAI,EAAC;AAAxD,GAAD,CAAhD;;AAEA,QAAMC,KAAK,GAAIC,GAAD,IAAS;AACnB,WAAOC,IAAI,CAACF,KAAL,CAAWC,GAAG,GAAG,GAAjB,IAAwB,GAA/B;AACH,GAFD;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CACF,kDAAiDX,MAAO,yCADtD,CAAL,CAGGY,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,YAAMC,GAAG,GAAG;AACVb,QAAAA,OAAO,EAAEY,IAAI,CAACZ,OAAL,CAAa,CAAb,EAAgBc,IADf;AAEVb,QAAAA,QAAQ,EAAEI,KAAK,CAACO,IAAI,CAACE,IAAL,CAAUb,QAAV,GAAqB,MAAtB,CAFL;AAGVC,QAAAA,QAAQ,EAAEG,KAAK,CAACO,IAAI,CAACE,IAAL,CAAUZ,QAAV,GAAoB,MAArB,CAHL;AAIVC,QAAAA,QAAQ,EAAES,IAAI,CAACE,IAAL,CAAUX,QAJV;AAKVC,QAAAA,IAAI,EAAEQ,IAAI,CAACE,IAAL,CAAUV,IAAV,CAAe,CAAf;AALI,OAAZ;AAOAL,MAAAA,eAAe,CAACgB,KAAK,KAAK,EACtB,GAAGA,KADmB;AAEtBf,QAAAA,OAAO,EAAEa,GAAG,CAACb,OAFS;AAGtBC,QAAAA,QAAQ,EAAEY,GAAG,CAACZ,QAHQ;AAItBC,QAAAA,QAAQ,EAACW,GAAG,CAACX,QAJS;AAKtBC,QAAAA,QAAQ,EAACU,GAAG,CAACV;AALS,OAAL,CAAN,CAAf;AAOD,KAnBH,EAoBGa,KApBH,CAoBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAtBH;AAuBD,GAxBQ,EAwBN,CAACpB,MAAD,CAxBM,CAAT;AAyBAqB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BrB,YAA9B;AAEA,sBACE;AAAA,eACGA,YAAY,CAACE,OADhB,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,WAGQF,YAAY,CAACG,QAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,WAKQH,YAAY,CAACI,QALrB,eAME;AAAA;AAAA;AAAA;AAAA,YANF,gBAOaJ,YAAY,CAACK,QAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5CD;;GAAMP,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({ weather: \"\", temp_min:0, temp_max:0, humidity:0, wind:0 });\n\n  const round = (num) => {\n      return Math.round(num * 100) / 100\n  }\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = {\n          weather: data.weather[0].main,\n          temp_min: round(data.main.temp_min - 273.15),\n          temp_max: round(data.main.temp_max -273.15),\n          humidity: data.main.humidity,\n          wind: data.main.wind[1]\n        };\n        setDataResponse(state => ({\n            ...state,\n            weather: obj.weather,\n            temp_min: obj.temp_min,\n            temp_max:obj.temp_max,\n            humidity:obj.humidity\n        }))\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n\n  return (\n    <div>\n      {dataResponse.weather}\n      <br/>\n      Min: {dataResponse.temp_min}\n      <br/>\n      Max: {dataResponse.temp_max}\n      <br/>\n      Humidity: {dataResponse.humidity}\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}