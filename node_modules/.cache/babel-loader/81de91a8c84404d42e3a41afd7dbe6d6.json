{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    icon: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: \"\",\n    sunset: \"\"\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      var startDate = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n      var day = moment(data.list[0].dt * 1e3).format(\"DD-MM-YYYY\");\n\n      if (day === startDate) {\n        const obj = {\n          weather: data.list[0].weather[0].main,\n          icon: data.list[0].weather[0].icon,\n          temp: round(data.list[0].main.temp - 273.15),\n          feels_like: round(data.list[0].main.feels_like - 273.15),\n          pressure: data.list[0].main.pressure,\n          temp_min: round(data.list[0].main.temp_min - 273.15),\n          temp_max: round(data.list[0].main.temp_max - 273.15),\n          humidity: data.list[0].main.humidity,\n          visibility: data.list[0].visibility,\n          windSpeed: data.list[0].wind.speed,\n          sunrise: moment(data.list[0].sys.sunrise * 1e3).format(\"hh:mm a\"),\n          sunset: moment(data.list[0].sys.sunset * 1e3).format(\"hh:mm a\")\n        };\n        setDataResponse(state => ({ ...state,\n          name: obj.name,\n          weather: obj.weather,\n          icon: obj.icon,\n          temp: obj.temp,\n          feels_like: obj.feels_like,\n          temp_min: obj.temp_min,\n          temp_max: obj.temp_max,\n          pressure: obj.pressure,\n          humidity: obj.humidity,\n          visibility: obj.visibility,\n          windSpeed: obj.windSpeed,\n          sunrise: obj.sunrise,\n          sunset: obj.sunset\n        }));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tiempo: \", dataResponse.weather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), dataResponse.icon ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura: \", dataResponse.temp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Sensaci\\xF3n T\\xE9rmica: \", dataResponse.feels_like]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura M\\xEDnima: \", dataResponse.temp_min]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura M\\xE1xima: \", dataResponse.temp_max]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Presi\\xF3n: \", dataResponse.pressure]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Humedad: \", dataResponse.humidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Visibilidad: \", dataResponse.visibility]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Velocidad de viento: \", dataResponse.windSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Amanecer: \", dataResponse.sunrise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Atardecer: \", dataResponse.sunset]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"IYZSPvf1Qkvpj9sHReeelr6Iz6I=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","moment","Clima","region","dataResponse","setDataResponse","weather","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","windsSpeed","sunrise","sunset","round","num","Math","fetch","then","response","json","data","startDate","Date","add","format","day","list","dt","obj","main","windSpeed","wind","speed","sys","state","name","catch","err","console","log","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    icon: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: \"\",\n    sunset: \"\",\n  });\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        var startDate = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n        var day = moment(data.list[0].dt * 1e3).format(\"DD-MM-YYYY\");\n        if (day === startDate) {\n          const obj = {\n            weather: data.list[0].weather[0].main,\n            icon: data.list[0].weather[0].icon,\n            temp: round(data.list[0].main.temp - 273.15),\n            feels_like: round(data.list[0].main.feels_like - 273.15),\n            pressure: data.list[0].main.pressure,\n            temp_min: round(data.list[0].main.temp_min - 273.15),\n            temp_max: round(data.list[0].main.temp_max - 273.15),\n            humidity: data.list[0].main.humidity,\n            visibility: data.list[0].visibility,\n            windSpeed: data.list[0].wind.speed,\n            sunrise: moment(data.list[0].sys.sunrise * 1e3).format(\"hh:mm a\"),\n            sunset: moment(data.list[0].sys.sunset * 1e3).format(\"hh:mm a\"),\n          };\n          setDataResponse((state) => ({\n            ...state,\n            name: obj.name,\n            weather: obj.weather,\n            icon: obj.icon,\n            temp: obj.temp,\n            feels_like: obj.feels_like,\n            temp_min: obj.temp_min,\n            temp_max: obj.temp_max,\n            pressure: obj.pressure,\n            humidity: obj.humidity,\n            visibility: obj.visibility,\n            windSpeed: obj.windSpeed,\n            sunrise: obj.sunrise,\n            sunset: obj.sunset,\n          }));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n\n  return (\n    <div>\n      <div>Tiempo: {dataResponse.weather}</div>\n      {dataResponse.icon ? (\n        <div>\n          <img\n            src={`http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`}\n          />\n        </div>\n      ) : null}\n      <div style={{ padding: 10 }}>Temperatura: {dataResponse.temp}</div>\n      <div style={{ padding: 10 }}>\n        Sensación Térmica: {dataResponse.feels_like}\n      </div>\n      <div style={{ padding: 10 }}>\n        Temperatura Mínima: {dataResponse.temp_min}\n      </div>\n      <div style={{ padding: 10 }}>\n        Temperatura Máxima: {dataResponse.temp_max}\n      </div>\n      <div style={{ padding: 10 }}>Presión: {dataResponse.pressure}</div>\n      <div style={{ padding: 10 }}>Humedad: {dataResponse.humidity}</div>\n      <div style={{ padding: 10 }}>Visibilidad: {dataResponse.visibility}</div>\n      <div style={{ padding: 10 }}>\n        Velocidad de viento: {dataResponse.windSpeed}\n      </div>\n      <div style={{ padding: 10 }}>Amanecer: {dataResponse.sunrise}</div>\n      <div style={{ padding: 10 }}>Atardecer: {dataResponse.sunset}</div>\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}