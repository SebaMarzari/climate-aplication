{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: [],\n    icon: [],\n    temp: [],\n    feels_like: [],\n    temp_min: [],\n    temp_max: [],\n    pressure: [],\n    humidity: [],\n    visibility: [],\n    windsSpeed: [],\n    sunrise: [],\n    sunset: []\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      for (var i = 0; data.list.length; i++) {\n        setDataResponse(state => ({ ...state,\n          weather: data.list.weather[0].main,\n          icon: data.list.weather[0].icon,\n          temp: round(data.list.main.temp - 273.15),\n          feels_like: round(data.list.main.feels_like - 273.15),\n          pressure: data.list.main.pressure,\n          temp_min: round(data.list.main.temp_min - 273.15),\n          temp_max: round(data.list.main.temp_max - 273.15),\n          humidity: data.list.main.humidity,\n          visibility: data.list.visibility,\n          windSpeed: data.list.wind.speed,\n          sunrise: moment(data.list.sys.sunrise * 1e3).format(\"hh:mm a\").toString(),\n          sunset: moment(data.list.sys.sunset * 1e3).format(\"hh:mm a\").toString()\n        }));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"msNgSILh/H8gLYdpgjm9AB6MqZs=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js"],"names":["useState","useEffect","moment","Div","Clima","region","dataResponse","setDataResponse","weather","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","windsSpeed","sunrise","sunset","round","num","Math","fetch","then","response","json","data","i","list","length","state","main","windSpeed","wind","speed","sys","format","toString","catch","err","console","log","display"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({\n    weather: [],\n    icon: [],\n    temp: [],\n    feels_like: [],\n    temp_min: [],\n    temp_max: [],\n    pressure: [],\n    humidity: [],\n    visibility: [],\n    windsSpeed: [],\n    sunrise: [],\n    sunset: [],\n  });\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n          for (var i = 0; data.list.length;i++){\n            setDataResponse((state) => ({\n                ...state,\n                weather: data.list.weather[0].main,\n          icon: data.list.weather[0].icon,\n          temp: round(data.list.main.temp - 273.15),\n          feels_like: round(data.list.main.feels_like - 273.15),\n          pressure: data.list.main.pressure,\n          temp_min: round(data.list.main.temp_min - 273.15),\n          temp_max: round(data.list.main.temp_max - 273.15),\n          humidity: data.list.main.humidity,\n          visibility: data.list.visibility,\n          windSpeed: data.list.wind.speed,\n          sunrise: moment(data.list.sys.sunrise * 1e3)\n            .format(\"hh:mm a\")\n            .toString(),\n          sunset: moment(data.list.sys.sunset * 1e3)\n            .format(\"hh:mm a\")\n            .toString(),\n              }));\n          }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response \", dataResponse);\n\n  return (\n    <div>\n      <div style={{ display: 'flex'}}>\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n        <Div padding={5} dataResponse={dataResponse} />\n    </div>\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}