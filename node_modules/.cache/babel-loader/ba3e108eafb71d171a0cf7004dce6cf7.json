{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    icon: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: \"\",\n    sunset: \"\"\n  });\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = {\n        weather: data.weather[0].main,\n        icon: data.weather[0].icon,\n        temp: round(data.main.temp - 273.15),\n        feels_like: round(data.main.feels_like - 273.15),\n        pressure: data.main.pressure,\n        temp_min: round(data.main.temp_min - 273.15),\n        temp_max: round(data.main.temp_max - 273.15),\n        humidity: data.main.humidity,\n        visibility: data.visibility,\n        windSpeed: data.wind.speed,\n        sunrise: moment(data.sys.sunrise * 1e3).format(\"hh:mm a\"),\n        sunset: moment(data.sys.sunset * 1e3).format(\"hh:mm a\")\n      };\n      setDataResponse(state => ({ ...state,\n        name: obj.name,\n        weather: obj.weather,\n        icon: obj.icon,\n        temp: obj.temp,\n        feels_like: obj.feels_like,\n        temp_min: obj.temp_min,\n        temp_max: obj.temp_max,\n        pressure: obj.pressure,\n        humidity: obj.humidity,\n        visibility: obj.visibility,\n        windSpeed: obj.windSpeed,\n        sunrise: obj.sunrise,\n        sunset: obj.sunset\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tiempo: \", dataResponse.weather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), dataResponse.icon ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura: \", dataResponse.temp, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Sensaci\\xF3n T\\xE9rmica: \", dataResponse.feels_like, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura M\\xEDnima: \", dataResponse.temp_min, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Temperatura M\\xE1xima: \", dataResponse.temp_max, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Presi\\xF3n: \", dataResponse.pressure, \" hPa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Humedad: \", dataResponse.humidity, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Visibilidad: \", dataResponse.visibility, \" metros\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Velocidad de viento: \", dataResponse.windSpeed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Amanecer: \", dataResponse.sunrise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [\"Atardecer: \", dataResponse.sunset]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"IYZSPvf1Qkvpj9sHReeelr6Iz6I=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","useEffect","moment","Clima","region","dataResponse","setDataResponse","weather","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","windsSpeed","sunrise","sunset","round","num","Math","fetch","then","response","json","data","obj","main","windSpeed","wind","speed","sys","format","state","name","catch","err","console","log","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState({\n    weather: \"\",\n    icon: \"\",\n    temp: 0,\n    feels_like: 0,\n    temp_min: 0,\n    temp_max: 0,\n    pressure: 0,\n    humidity: 0,\n    visibility: 0,\n    windsSpeed: 0,\n    sunrise: \"\",\n    sunset: \"\",\n  });\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = {\n          weather: data.weather[0].main,\n          icon: data.weather[0].icon,\n          temp: round(data.main.temp - 273.15),\n          feels_like: round(data.main.feels_like - 273.15),\n          pressure: data.main.pressure,\n          temp_min: round(data.main.temp_min - 273.15),\n          temp_max: round(data.main.temp_max - 273.15),\n          humidity: data.main.humidity,\n          visibility: data.visibility,\n          windSpeed: data.wind.speed,\n          sunrise: moment(data.sys.sunrise * 1e3).format(\"hh:mm a\"),\n          sunset: moment(data.sys.sunset * 1e3).format(\"hh:mm a\"),\n        };\n        setDataResponse((state) => ({\n          ...state,\n          name: obj.name,\n          weather: obj.weather,\n          icon: obj.icon,\n          temp: obj.temp,\n          feels_like: obj.feels_like,\n          temp_min: obj.temp_min,\n          temp_max: obj.temp_max,\n          pressure: obj.pressure,\n          humidity: obj.humidity,\n          visibility: obj.visibility,\n          windSpeed: obj.windSpeed,\n          sunrise: obj.sunrise,\n          sunset: obj.sunset,\n        }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n\n  return (\n    <div>\n      <div>Tiempo: {dataResponse.weather}</div>\n      {dataResponse.icon ? (\n        <div>\n          <img\n            src={`http://openweathermap.org/img/wn/${dataResponse.icon}@2x.png`}\n          />\n        </div>\n      ) : null}\n      <div style={{ padding: 10 }}>Temperatura: {dataResponse.temp} °C</div>\n      <div style={{ padding: 10 }}>\n        Sensación Térmica: {dataResponse.feels_like} °C\n      </div>\n      <div style={{ padding: 10 }}>\n        Temperatura Mínima: {dataResponse.temp_min} °C\n      </div>\n      <div style={{ padding: 10 }}>\n        Temperatura Máxima: {dataResponse.temp_max} °C\n      </div>\n      <div style={{ padding: 10 }}>Presión: {dataResponse.pressure} hPa</div>\n      <div style={{ padding: 10 }}>Humedad: {dataResponse.humidity} %</div>\n      <div style={{ padding: 10 }}>Visibilidad: {dataResponse.visibility} metros</div>\n      <div style={{ padding: 10 }}>\n        Velocidad de viento: {dataResponse.windSpeed} m/s\n      </div>\n      <div style={{ padding: 10 }}>Amanecer: {dataResponse.sunrise}</div>\n      <div style={{ padding: 10 }}>Atardecer: {dataResponse.sunset}</div>\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}