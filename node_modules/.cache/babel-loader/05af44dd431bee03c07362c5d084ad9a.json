{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/Clima.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  console.log(region);\n  useEffect(() => {\n    setSuccess(false);\n    setDuplicated(false);\n    fetch(`api.openweathermap.org/data/2.5/weather?lat=-33.1236&lon=-33.1236&appid={API key}`).then(response => response.json()).then(data => {\n      if (data[0] && data[0].word) {\n        setError(false);\n        setPalabra(data[0]);\n        const obj = {\n          palabra: data[0].word,\n          description: data[0].meanings[0].definitions[0].definition,\n          example: data[0].meanings[0].definitions[0].example\n        };\n        setWord([...word, obj]);\n      } else {\n        setError(true);\n      }\n    });\n  }, [region]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clima, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/Clima.js"],"names":["useState","Clima","region","console","log","useEffect","setSuccess","setDuplicated","fetch","then","response","json","data","word","setError","setPalabra","obj","palabra","description","meanings","definitions","definition","example","setWord"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAG,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,IAAAA,KAAK,CAAE,mFAAF,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,UAAIA,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAAvB,EAA6B;AACzBC,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAC,QAAAA,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAV;AACA,cAAMI,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQC,IADT;AAERK,UAAAA,WAAW,EAAEN,IAAI,CAAC,CAAD,CAAJ,CAAQO,QAAR,CAAiB,CAAjB,EAAoBC,WAApB,CAAgC,CAAhC,EAAmCC,UAFxC;AAGRC,UAAAA,OAAO,EAAEV,IAAI,CAAC,CAAD,CAAJ,CAAQO,QAAR,CAAiB,CAAjB,EAAoBC,WAApB,CAAgC,CAAhC,EAAmCE;AAHpC,SAAZ;AAKAC,QAAAA,OAAO,CAAC,CAAC,GAAGV,IAAJ,EAAUG,GAAV,CAAD,CAAP;AACH,OATD,MASO;AACHF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,KAfL;AAgBH,GAnBQ,EAmBN,CAACZ,MAAD,CAnBM,CAAT;AAqBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD;;GAAMD,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react'\n\nconst Clima = ( {region} ) => {\n    console.log(region)\n    useEffect(() => {\n        setSuccess(false);\n        setDuplicated(false)\n        fetch(`api.openweathermap.org/data/2.5/weather?lat=-33.1236&lon=-33.1236&appid={API key}`)\n            .then(response => response.json())\n            .then((data) => {\n                if (data[0] && data[0].word) {\n                    setError(false)\n                    setPalabra(data[0]);\n                    const obj = {\n                        palabra: data[0].word,\n                        description: data[0].meanings[0].definitions[0].definition,\n                        example: data[0].meanings[0].definitions[0].example,\n                    }\n                    setWord([...word, obj]);\n                } else {\n                    setError(true)\n                }\n            });\n    }, [region]);\n\n    return(\n        <div>\n            Hola\n        </div>\n    )\n}\n\nexport default Clima"]},"metadata":{},"sourceType":"module"}