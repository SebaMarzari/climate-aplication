{"ast":null,"code":"var _jsxFileName = \"/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clima = _ref => {\n  _s();\n\n  let {\n    region\n  } = _ref;\n  const [dataResponse, setDataResponse] = useState([]);\n\n  const round = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  useEffect(() => {\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`).then(response => response.json()).then(data => {\n      const obj = [];\n      var startDate = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n      var day = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n      var add = true;\n\n      for (var i = 0; data.list.length; i++) {\n        day = moment(data.list[i].dt * 1e3).format(\"DD-MM-YYYY\");\n\n        if (day === startDate) {\n          obj.push({\n            weather: data.list[i].weather[0].main,\n            icon: data.list[i].weather[0].icon,\n            temp: round(data.list[i].main.temp - 273.15),\n            feels_like: round(data.list[i].main.feels_like - 273.15),\n            pressure: data.list[i].main.pressure,\n            temp_min: round(data.list[i].main.temp_min - 273.15),\n            temp_max: round(data.list[i].main.temp_max - 273.15),\n            humidity: data.list[i].main.humidity,\n            visibility: data.list[i].visibility,\n            windSpeed: data.list[i].wind.speed,\n            sunrise: moment(data.list[i].sys.sunrise * 1e3).format(\"hh:mm a\").toString(),\n            sunset: moment(data.list[i].sys.sunset * 1e3).format(\"hh:mm a\").toString()\n          });\n          startDate = moment(startDate, 'DD-MM-YYYY').add(1, \"day\").format('DD-MM-YYYY');\n          setDataResponse({ ...dataResponse,\n            obj\n          });\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [region]);\n  console.log(\"Data Response daily\", dataResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse.obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse.obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse.obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse.obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        padding: 5,\n        dataResponse: dataResponse.obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clima, \"KYq8BDEj4F+X3Rt5y+pDD09aJaY=\");\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/futit/workspace/curso-react/clima-app/src/components/DayForecast.js"],"names":["useState","useEffect","moment","Div","Clima","region","dataResponse","setDataResponse","round","num","Math","fetch","then","response","json","data","obj","startDate","Date","add","format","day","i","list","length","dt","push","weather","main","icon","temp","feels_like","pressure","temp_min","temp_max","humidity","visibility","windSpeed","wind","speed","sunrise","sys","toString","sunset","catch","err","console","log","display"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,KAAK,GAAIC,GAAD,IAAS;AACrB,WAAOC,IAAI,CAACF,KAAL,CAAWC,GAAG,GAAG,GAAjB,IAAwB,GAA/B;AACD,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CACF,mDAAkDN,MAAO,yCADvD,CAAL,CAGGO,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,YAAMC,GAAG,GAAG,EAAZ;AACA,UAAIC,SAAS,GAAGf,MAAM,CAAC,IAAIgB,IAAJ,EAAD,CAAN,CAAmBC,GAAnB,CAAuB,CAAvB,EAA0B,KAA1B,EAAiCC,MAAjC,CAAwC,YAAxC,CAAhB;AACA,UAAIC,GAAG,GAAGnB,MAAM,CAAC,IAAIgB,IAAJ,EAAD,CAAN,CAAmBC,GAAnB,CAAuB,CAAvB,EAA0B,KAA1B,EAAiCC,MAAjC,CAAwC,YAAxC,CAAV;AACA,UAAID,GAAG,GAAG,IAAV;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBP,IAAI,CAACQ,IAAL,CAAUC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,GAAG,GAAGnB,MAAM,CAACa,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaG,EAAb,GAAkB,GAAnB,CAAN,CAA8BL,MAA9B,CAAqC,YAArC,CAAN;;AACA,YAAIC,GAAG,KAAKJ,SAAZ,EAAuB;AACrBD,UAAAA,GAAG,CAACU,IAAJ,CAAS;AACPC,YAAAA,OAAO,EAAEZ,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaK,OAAb,CAAqB,CAArB,EAAwBC,IAD1B;AAEPC,YAAAA,IAAI,EAAEd,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaK,OAAb,CAAqB,CAArB,EAAwBE,IAFvB;AAGPC,YAAAA,IAAI,EAAEtB,KAAK,CAACO,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBE,IAAlB,GAAyB,MAA1B,CAHJ;AAIPC,YAAAA,UAAU,EAAEvB,KAAK,CAACO,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBG,UAAlB,GAA+B,MAAhC,CAJV;AAKPC,YAAAA,QAAQ,EAAEjB,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBI,QALrB;AAMPC,YAAAA,QAAQ,EAAEzB,KAAK,CAACO,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBK,QAAlB,GAA6B,MAA9B,CANR;AAOPC,YAAAA,QAAQ,EAAE1B,KAAK,CAACO,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBM,QAAlB,GAA6B,MAA9B,CAPR;AAQPC,YAAAA,QAAQ,EAAEpB,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAaM,IAAb,CAAkBO,QARrB;AASPC,YAAAA,UAAU,EAAErB,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAac,UATlB;AAUPC,YAAAA,SAAS,EAAEtB,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAagB,IAAb,CAAkBC,KAVtB;AAWPC,YAAAA,OAAO,EAAEtC,MAAM,CAACa,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAamB,GAAb,CAAiBD,OAAjB,GAA2B,GAA5B,CAAN,CACNpB,MADM,CACC,SADD,EAENsB,QAFM,EAXF;AAcPC,YAAAA,MAAM,EAAEzC,MAAM,CAACa,IAAI,CAACQ,IAAL,CAAUD,CAAV,EAAamB,GAAb,CAAiBE,MAAjB,GAA0B,GAA3B,CAAN,CACLvB,MADK,CACE,SADF,EAELsB,QAFK;AAdD,WAAT;AAkBAzB,UAAAA,SAAS,GAAGf,MAAM,CAACe,SAAD,EAAY,YAAZ,CAAN,CAAgCE,GAAhC,CAAoC,CAApC,EAAuC,KAAvC,EAA8CC,MAA9C,CAAqD,YAArD,CAAZ;AACAb,UAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmBU,YAAAA;AAAnB,WAAD,CAAf;AACD;AACF;AACF,KAlCH,EAmCG4B,KAnCH,CAmCUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KArCH;AAsCD,GAvCQ,EAuCN,CAACxC,MAAD,CAvCM,CAAT;AAwCAyC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCzC,YAAnC;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAE0C,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,YAAY,EAAE1C,YAAY,CAACU;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,YAAY,EAAEV,YAAY,CAACU;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,YAAY,EAAEV,YAAY,CAACU;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,YAAY,EAAEV,YAAY,CAACU;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,YAAY,EAAEV,YAAY,CAACU;AAA5C;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3DD;;GAAMZ,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Div from \"./Div\";\n\nconst Clima = ({ region }) => {\n  const [dataResponse, setDataResponse] = useState([]);\n\n  const round = (num) => {\n    return Math.round(num * 100) / 100;\n  };\n  useEffect(() => {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?${region}&appid=12f79219938e1bf1c3a59af0fca96d62`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const obj = [];\n        var startDate = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n        var day = moment(new Date()).add(1, \"day\").format(\"DD-MM-YYYY\");\n        var add = true;\n        for (var i = 0; data.list.length; i++) {\n          day = moment(data.list[i].dt * 1e3).format(\"DD-MM-YYYY\");\n          if (day === startDate) {\n            obj.push({\n              weather: data.list[i].weather[0].main,\n              icon: data.list[i].weather[0].icon,\n              temp: round(data.list[i].main.temp - 273.15),\n              feels_like: round(data.list[i].main.feels_like - 273.15),\n              pressure: data.list[i].main.pressure,\n              temp_min: round(data.list[i].main.temp_min - 273.15),\n              temp_max: round(data.list[i].main.temp_max - 273.15),\n              humidity: data.list[i].main.humidity,\n              visibility: data.list[i].visibility,\n              windSpeed: data.list[i].wind.speed,\n              sunrise: moment(data.list[i].sys.sunrise * 1e3)\n                .format(\"hh:mm a\")\n                .toString(),\n              sunset: moment(data.list[i].sys.sunset * 1e3)\n                .format(\"hh:mm a\")\n                .toString(),\n            });\n            startDate = moment(startDate, 'DD-MM-YYYY').add(1, \"day\").format('DD-MM-YYYY')\n            setDataResponse({ ...dataResponse, obj });\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [region]);\n  console.log(\"Data Response daily\", dataResponse);\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Div padding={5} dataResponse={dataResponse.obj} />\n        <Div padding={5} dataResponse={dataResponse.obj} />\n        <Div padding={5} dataResponse={dataResponse.obj} />\n        <Div padding={5} dataResponse={dataResponse.obj} />\n        <Div padding={5} dataResponse={dataResponse.obj} />\n      </div>\n    </div>\n  );\n};\n\nexport default Clima;\n"]},"metadata":{},"sourceType":"module"}